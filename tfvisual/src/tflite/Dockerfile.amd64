FROM python:3.8-slim

RUN apt-get update && apt-get --no-install-recommends -y install \
    libjpeg-dev \
    libtiff5-dev \
    libavcodec-dev \
    libavformat-dev \
    libswscale-dev \
    libv4l-dev \
    libxvidcore-dev \
    libx264-dev \
    libgstreamer-plugins-base1.0-dev \
    qtbase5-dev \
    unzip \
    wget 

#RUN apt-get install -y python3-pip
#RUN pip3 install opencv-python==3.4.8.29
# 4.2.0.32 required for videocapture(0) to work
RUN pip3 install opencv-python==4.2.0.32 tensorflow

RUN rm -rf /var/lib/apt/lists/*

WORKDIR /
RUN mkdir -p model
RUN cd /model; wget https://storage.googleapis.com/download.tensorflow.org/models/tflite/coco_ssd_mobilenet_v1_1.0_quant_2018_06_29.zip
RUN cd /model; unzip coco_ssd_mobilenet_v1_1.0_quant_2018_06_29.zip
RUN rm /model/coco_ssd_mobilenet_v1_1.0_quant_2018_06_29.zip

WORKDIR /
RUN mkdir -p package
COPY service/tflite_webcam_image.py .
COPY service/package/*.py package/

WORKDIR /
CMD /usr/local/bin/python3 tflite_webcam_image.py

### test using a single static image with CMD in docker shell
# Opencv-python==4.2.0.32 is able to process the test image and detect the classes. Also volume mount makes the annotated picture available outside
#docker run -it -v "$PWD":/app edgedock/sg.edge.example.tfvisual.tflite_amd64:1.0.0 /bin/bash
#WORKDIR /
#COPY service/tflite_image_single_test.py .
#COPY service/test-car-person.jpg .
#CMD /usr/local/bin/python3 tflite_image_single_test.py

